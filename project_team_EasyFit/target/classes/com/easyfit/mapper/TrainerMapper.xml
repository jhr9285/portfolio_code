<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyfit.mapper.TrainerMapper"><!-- Query 작성시 CDATA 꼭 써주세요. -->
<!-- 검색,조회 SECURITY -->
<sql id="criteria">			   
	<trim prefix="(" suffix=") AND" prefixOverrides="OR"> 
		<foreach item='type' collection="cri.typeArr"> 
			<trim prefix="OR"> 
				<choose>
					<when test="type == 'A'.toString()">
						tname LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'B'.toString()">
						tno LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						ttel LIKE '%'||#{cri.keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>

<!-- 트레이너 목록 -->
<select id="list" resultType="com.easyfit.domain.join.TrainerJoinVO"> 
SELECT
    rn, tno, tname, tid, ttel, taddress, tmemo, auth
FROM
    (
    SELECT
       rownum rn, t.tno, tname, ttel, taddress, tmemo, auth.tid, auth
    FROM
        trainer t, trainer_auth auth
    WHERE
<include refid="criteria"></include>		
<![CDATA[
        t.tno = auth.tno
        AND t.tno NOT IN 0
        AND auth = 'ROLE_MANAGER'
        AND rownum <= 1 * 10
    )
WHERE
     rn > (1 - 1) * 10
ORDER BY
    tno
]]>
</select>

<!-- 트레이너 수 -->
<select id="count" resultType="long">
SELECT
    COUNT(tno)
FROM
    trainer
WHERE
<include refid="criteria"></include>
<![CDATA[
    tno NOT IN 0
]]>
</select>

<!-- 트레이너 정보 -->
<select id="get" resultType="com.easyfit.domain.TrainerVO">
SELECT
	tno, tname, tid, tgen, ttel, taddress, tmemo, tbirth
FROM
	trainer
WHERE
	tno = #{tno}
</select>

<!-- 트레이너 등록 -->
<insert id="registerSelectKey">
<selectKey keyProperty="tno" order="BEFORE" resultType="long">
<![CDATA[
SELECT trainer_seq.NEXTVAL FROM dual
]]>
</selectKey>
INSERT INTO 
	trainer(tno, tname, tid, tpassword, tgen, ttel, taddress, tbirth)
VALUES
	(#{tno}, #{tname}, #{tid}, #{tpassword}, #{tgen}, #{ttel}, #{taddress}, #{tbirth})
</insert>

<!-- 트레이너 수정 -->
<update id="modify">
UPDATE
	trainer
SET
	tid = #{tid},
	tname = #{tname},
	ttel = #{ttel},
	tbirth = #{tbirth},
	taddress = #{taddress}
WHERE
	tno = #{tno}
</update>

<!-- 트레이너 권한 등록 -->
<insert id="authRegister" parameterType="com.easyfit.domain.TrainerAuthVO">
INSERT INTO
	trainer_auth(tid, auth, tno)
VALUES
	(#{tid}, 'ROLE_MANAGER', (
		SELECT
			tno
		FROM
			trainer
		WHERE
			tid = #{tid}
	))
</insert>

<!-- 트레이너 권한 삭제 -->
<update id="authRemove">
DELETE
FROM
    trainer_auth
WHERE
    tno = #{tno}
</update>

<!-- 트레이너 권한 수정 -->
<update id="authModify">
UPDATE
	trainer_auth
SET
	auth = 'ROLE_USER'
WHERE
	tno = #{tno}
</update>

<!-- 담당트레이너의 회원 목록 -->
<select id="trList" resultType="com.easyfit.domain.join.LessonJoinVO">
<![CDATA[
SELECT DISTINCT
    tno, mname, mtel, mjoindate, MAX(prturn) max
FROM
    ptrecord p, member m
WHERE
    p.mno = m.mno
    AND tno = #{tno}
GROUP BY
    tno, mname, mtel, mjoindate
ORDER BY
    mname
]]>
</select>

</mapper>