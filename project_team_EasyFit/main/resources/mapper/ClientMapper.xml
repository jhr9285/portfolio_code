<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyfit.mapper.ClientMapper"><!-- Query 작성시 CDATA 꼭 써주세요. -->
<!-- #{tno}의 검색,조회 SECURITY 시작 -->
<sql id="myCriteria">			   
	<trim prefix="(" suffix=") AND" prefixOverrides="OR"> 
		<foreach item='type' collection="cri.typeArr"> 
			<trim prefix="OR"> 
				<choose>
					<when test="type == 'A'.toString()">
						mname LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'B'.toString()">
						m.mno LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						mtel LIKE '%'||#{cri.keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>
<!-- #{tno}의 검색,조회 SECURITY 종료 -->

<!-- 검색,조회 SECURITY 시작 -->
<sql id="allCriteria">			   
	<trim prefix="(" suffix=") AND" prefixOverrides="OR"> 
		<foreach item='type' collection="cri.typeArr"> 
			<trim prefix="OR"> 
				<choose>
					<when test="type == 'A'.toString()">
						mname LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'B'.toString()">
						mno LIKE '%'||#{cri.keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						mtel LIKE '%'||#{cri.keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>
<!-- 검색,조회 SECURITY 종료 -->

<!-- #{tno}의 회원 목록 -->
<select id="list" resultType="com.easyfit.domain.join.ClientJoinVO"> 
<![CDATA[
SELECT
    rn, tno, mno, mname, mtel, mjoindate, memail
FROM
    (
    SELECT
        rownum rn, tno, m.mno, m.mname, m.mtel, m.mjoindate, m.memail
    FROM
        member m, (
            SELECT DISTINCT
                mno, tno
            FROM
                ptrecord
            WHERE
                tno = #{tno} 
            ) p
    WHERE
]]>
<include refid="myCriteria"></include>		
<![CDATA[
        m.mno = p.mno
        AND rownum <= #{cri.pageNum} * #{cri.amount}
    )
WHERE
     rn > (#{cri.pageNum} - 1) * #{cri.amount}
ORDER BY
	mjoindate DESC
]]>
</select>

<!-- 모든 회원 목록 -->
<select id="allList" resultType="com.easyfit.domain.ClientVO">
<![CDATA[
SELECT
	rn, mno, mname, mtel, mjoindate, memail
FROM (
	SELECT
		rownum rn, mno, mname, mtel, mjoindate, memail
	FROM
		member
	WHERE
]]>
<include refid="allCriteria"></include>		
<![CDATA[		
       	rownum <= #{cri.pageNum} * #{cri.amount}
     )
WHERE
	rn > (#{cri.pageNum} - 1) * #{cri.amount}
ORDER BY
    mjoindate DESC
]]>

</select>
	
<!-- #{tno}의 총 회원수 -->
<select id="count" resultType="long">
SELECT
	count(m.mno)
FROM
	member m, (        
        SELECT DISTINCT
            mno, tno
        FROM
            ptrecord
        WHERE
            tno = #{tno} 
        ) p
WHERE
<include refid="myCriteria"></include>		
<![CDATA[		
	m.mno = p.mno
AND
	m.mno > 0
]]>
</select>

<!-- 모든 회원 수 -->
<select id="allCount" resultType="long">		
SELECT
	count(*)
FROM
	member
WHERE
<include refid="allCriteria"></include>
<![CDATA[
	mno > 0	
]]>
</select>

<!-- 회원 등록 -->
<insert id="registerSelectKey">
<selectKey keyProperty="mno" order="BEFORE" resultType="long">
<![CDATA[
SELECT member_seq.NEXTVAL FROM dual
]]>
</selectKey>
INSERT INTO 
	member(mno, mname, mbirth, mgen, mtel, maddress, mjoindate, mdeldate, mmemo, memail)
VALUES
	(#{mno}, #{mname}, #{mbirth}, #{mgen}, #{mtel}, #{maddress}, #{mjoindate}, #{mdeldate}, #{mmemo}, #{memail})
</insert>
	
<!-- 회원 정보 -->
<select id="get" resultType="com.easyfit.domain.ClientVO">
<![CDATA[
SELECT 
	mno, mname, mbirth, maddress, mjoindate, memail
FROM 
	member 
WHERE 
	mno = #{mno}
]]>
</select>
	
<!-- 회원 수정 -->
<update id="modify">
<![CDATA[
UPDATE
	member
SET
	mname = #{mname},
	memail = #{memail},
	mbirth = #{mbirth},
	maddress = #{maddress}
WHERE
	mno = #{mno}
]]>
</update>
	
<!-- 회원 삭제 -->
<delete id="remove">
DELETE
FROM
	member
WHERE
	mno = #{mno}
</delete>

<!-- PT 목록 -->
<select id="prList" resultType="com.easyfit.domain.PTRecordVO">
<![CDATA[
SELECT
    mno, prno, prturn, prstartdate, prenddate, prcount, prcountall
FROM
   ptrecord
WHERE
   mno = #{mno}
   AND tno = #{tno}
]]>
</select>

<!-- 담당 트레이너 -->

<!-- PT 등록 -->
<insert id="prRegister" parameterType="com.easyfit.domain.PTRecordVO">
<![CDATA[
INSERT INTO
	ptrecord(prno, mno, tno, prturn, prstartdate, prenddate, prcount, prcountall)
VALUES
	(ptrecord_seq.NEXTVAL, #{mno}, #{tno}, #{prturn}, #{prstartdate}, #{prenddate}, #{prcount}, #{prcountall})
]]>
</insert>

<!--PT 상세보기  -->
<select id="prGet" resultType="com.easyfit.domain.PTRecordVO">
<![CDATA[
SELECT
	prno, mno, tno, prturn, prstartdate, prenddate, prcount, prcountall
FROM
	ptrecord
WHERE
	prno = #{prno}
]]>
</select>

<!-- PT 수정하기 -->
<update id="prModify">
<![CDATA[
UPDATE 
	ptrecord
SET
	prturn = #{prturn},
	prstartdate = #{prstartdate},
	prenddate = #{prenddate},
	prcount = #{prcount},
	prcountall = #{prcountall}
WHERE
	prno = #{prno}
]]>
</update>

<!-- PT 삭제하기 -->

<delete id="prRemove">
<![CDATA[
DELETE 
FROM 
	ptrecord 
WHERE 
	prno = #{prno}
]]>
</delete>

<!-- 스케쥴등록 -->
<insert id="scheduleRegister" parameterType="com.easyfit.domain.ExerciseRecordVO">
<![CDATA[
	INSERT INTO
	    exerciserecord
	VALUES(
	    exerciserecord_seq.NEXTVAL,
	    #{ergroup},
	    #{edate},
	    #{eno},
	    #{erset},
	    #{erweight},
	    #{ernumber},
	    	(
	        SELECT
	            ptr.prno
	        FROM
	            ptrecord ptr, member mem
	        WHERE
	            ptr.mno = mem.mno
	            AND mem.mname = #{mname}
	            AND prno = #{prno}
	        ),  sysdate, #{ermemo}
	)
]]>
</insert>

</mapper>